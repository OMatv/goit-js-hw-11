import{a as u,S as g,i as l}from"./assets/vendor-f736e62a.js";(function(){const o=document.createElement("link").relList;if(o&&o.supports&&o.supports("modulepreload"))return;for(const e of document.querySelectorAll('link[rel="modulepreload"]'))r(e);new MutationObserver(e=>{for(const t of e)if(t.type==="childList")for(const n of t.addedNodes)n.tagName==="LINK"&&n.rel==="modulepreload"&&r(n)}).observe(document,{childList:!0,subtree:!0});function s(e){const t={};return e.integrity&&(t.integrity=e.integrity),e.referrerPolicy&&(t.referrerPolicy=e.referrerPolicy),e.crossOrigin==="use-credentials"?t.credentials="include":e.crossOrigin==="anonymous"?t.credentials="omit":t.credentials="same-origin",t}function r(e){if(e.ep)return;e.ep=!0;const t=s(e);fetch(e.href,t)}})();async function m(a,o){try{return(await u.get("https://pixabay.com/api/",{params:{key:"43289261-b2f679df5fe28faf218337d96",q:a,image_type:"photo",orientation:"horizontal",captions:!0,page:o,per_page:15}})).data.hits}catch{throw new Error("Failed to fetch images from Pixabay API")}}function y(){const a=document.querySelector(".gallery");a.innerHTML=""}function p(a){const o=document.querySelector(".gallery");let s="";a.forEach(r=>{s+=`
      <a class="gallery__item" href="${r.largeImageURL}" target="_blank">
        <figure class="gallery__figure">
          <img class="gallery__img" src="${r.webformatURL}" alt="${r.tags}" loading="lazy">
          <figcaption class="gallery__figcaption">
            <div class="gallery__caption">Likes: ${r.likes}</div>
            <div class="gallery__caption">Views: ${r.views}</div>
            <div class="gallery__caption">Comments: ${r.comments}</div>
            <div class="gallery__caption">Downloads: ${r.downloads}</div>
          </figcaption>
        </figure>
      </a>`}),o.innerHTML=s}document.addEventListener("DOMContentLoaded",()=>{const a=document.querySelector("#search-form"),o=document.querySelector("#search-input"),s=document.querySelector(".gallery"),r=document.querySelector(".loader"),e=new g(".gallery a");let t=1,n="";async function c(){try{r.classList.add("visible");const i=await m(n,t);if(i.length===0){l.info({title:"Info",message:"No more images to load.",position:"topRight"});return}p(i),e.refresh(),t++}catch{l.error({title:"Error",message:"Failed to fetch images. Please try again later.",position:"topRight"})}finally{r.classList.remove("visible")}}async function f(i){i.preventDefault();const d=o.value.trim();if(!d){l.error({title:"Error",message:"Please enter a search term",position:"topRight"});return}y(),n=d,t=1,s.style.display="none",await c(),s.style.display="flex"}a.addEventListener("submit",f),new IntersectionObserver(async i=>{i[0].isIntersecting&&await c()},{threshold:0}).observe(r)});
//# sourceMappingURL=commonHelpers.js.map
