{"version":3,"file":"commonHelpers.js","sources":["../src/js/pixabay-api.js","../src/js/render-functions.js","../src/main.js"],"sourcesContent":["import axios from 'axios';\n\nexport async function fetchImages(query, page) {\n  try {\n    const response = await axios.get('https://pixabay.com/api/', {\n      params: {\n        key: '43289261-b2f679df5fe28faf218337d96',\n        q: query,\n        image_type: 'photo',\n        orientation: 'horizontal',\n        captions: true,\n        page: page,\n        per_page: 15,\n      },\n    });\n\n    return response.data.hits;\n  } catch (error) {\n    throw new Error('Failed to fetch images from Pixabay API');\n  }\n}\n","export function clearGallery() {\n  const galleryElement = document.querySelector('.gallery');\n  galleryElement.innerHTML = '';\n}\n\nexport function renderImages(images) {\n  const galleryElement = document.querySelector('.gallery');\n  let imageHTML = '';\n\n  images.forEach(image => {\n    imageHTML += `\n      <a class=\"gallery__item\" href=\"${image.largeImageURL}\" target=\"_blank\">\n        <figure class=\"gallery__figure\">\n          <img class=\"gallery__img\" src=\"${image.webformatURL}\" alt=\"${image.tags}\" loading=\"lazy\">\n          <figcaption class=\"gallery__figcaption\">\n            <div class=\"gallery__caption\">Likes: ${image.likes}</div>\n            <div class=\"gallery__caption\">Views: ${image.views}</div>\n            <div class=\"gallery__caption\">Comments: ${image.comments}</div>\n            <div class=\"gallery__caption\">Downloads: ${image.downloads}</div>\n          </figcaption>\n        </figure>\n      </a>`;\n  });\n\n  galleryElement.innerHTML = imageHTML;\n}\n","import { fetchImages } from './js/pixabay-api.js';\nimport { renderImages, clearGallery } from './js/render-functions.js';\nimport SimpleLightbox from 'simplelightbox';\nimport 'simplelightbox/dist/simple-lightbox.min.css';\nimport iziToast from 'izitoast';\nimport 'izitoast/dist/css/iziToast.min.css';\n\ndocument.addEventListener('DOMContentLoaded', () => {\n  const form = document.querySelector('#search-form');\n  const input = document.querySelector('#search-input');\n  const gallery = document.querySelector('.gallery');\n  const loader = document.querySelector('.loader');\n\n  const lightbox = new SimpleLightbox('.gallery a');\n\n  let currentPage = 1;\n  let currentQuery = '';\n\n  async function loadMoreImages() {\n    try {\n      loader.classList.add('visible');\n      const images = await fetchImages(currentQuery, currentPage);\n      if (images.length === 0) {\n        iziToast.info({\n          title: 'Info',\n          message: 'No more images to load.',\n          position: 'topRight',\n        });\n        return;\n      }\n      renderImages(images);\n      lightbox.refresh(); // Оновлюємо SimpleLightbox після додавання нових зображень\n      currentPage++;\n    } catch (error) {\n      iziToast.error({\n        title: 'Error',\n        message: 'Failed to fetch images. Please try again later.',\n        position: 'topRight',\n      });\n    } finally {\n      loader.classList.remove('visible');\n    }\n  }\n\n  async function handleSearchSubmit(event) {\n    event.preventDefault();\n    const searchTerm = input.value.trim();\n    if (!searchTerm) {\n      iziToast.error({\n        title: 'Error',\n        message: 'Please enter a search term',\n        position: 'topRight',\n      });\n      return;\n    }\n    clearGallery();\n    currentQuery = searchTerm;\n    currentPage = 1;\n    gallery.style.display = 'none'; // Приховуємо галерею перед запитом\n    await loadMoreImages();\n    gallery.style.display = 'flex'; // Показуємо галерею після завантаження зображень\n  }\n\n  form.addEventListener('submit', handleSearchSubmit);\n\n  // Intersection Observer для завантаження додаткових зображень при прокрутці\n  const observer = new IntersectionObserver(\n    async entries => {\n      if (entries[0].isIntersecting) {\n        await loadMoreImages();\n      }\n    },\n    { threshold: 0 }\n  );\n\n  observer.observe(loader);\n});\n"],"names":["fetchImages","query","page","axios","clearGallery","galleryElement","renderImages","images","imageHTML","image","form","input","gallery","loader","lightbox","SimpleLightbox","currentPage","currentQuery","loadMoreImages","iziToast","handleSearchSubmit","event","searchTerm","entries"],"mappings":"owBAEO,eAAeA,EAAYC,EAAOC,EAAM,CAC7C,GAAI,CAaF,OAZiB,MAAMC,EAAM,IAAI,2BAA4B,CAC3D,OAAQ,CACN,IAAK,qCACL,EAAGF,EACH,WAAY,QACZ,YAAa,aACb,SAAU,GACV,KAAMC,EACN,SAAU,EACX,CACP,CAAK,GAEe,KAAK,IACtB,MAAe,CACd,MAAM,IAAI,MAAM,yCAAyC,CAC1D,CACH,CCpBO,SAASE,GAAe,CAC7B,MAAMC,EAAiB,SAAS,cAAc,UAAU,EACxDA,EAAe,UAAY,EAC7B,CAEO,SAASC,EAAaC,EAAQ,CACnC,MAAMF,EAAiB,SAAS,cAAc,UAAU,EACxD,IAAIG,EAAY,GAEhBD,EAAO,QAAQE,GAAS,CACtBD,GAAa;AAAA,uCACsBC,EAAM,aAAa;AAAA;AAAA,2CAEfA,EAAM,YAAY,UAAUA,EAAM,IAAI;AAAA;AAAA,mDAE9BA,EAAM,KAAK;AAAA,mDACXA,EAAM,KAAK;AAAA,sDACRA,EAAM,QAAQ;AAAA,uDACbA,EAAM,SAAS;AAAA;AAAA;AAAA,WAItE,CAAG,EAEDJ,EAAe,UAAYG,CAC7B,CClBA,SAAS,iBAAiB,mBAAoB,IAAM,CAClD,MAAME,EAAO,SAAS,cAAc,cAAc,EAC5CC,EAAQ,SAAS,cAAc,eAAe,EAC9CC,EAAU,SAAS,cAAc,UAAU,EAC3CC,EAAS,SAAS,cAAc,SAAS,EAEzCC,EAAW,IAAIC,EAAe,YAAY,EAEhD,IAAIC,EAAc,EACdC,EAAe,GAEnB,eAAeC,GAAiB,CAC9B,GAAI,CACFL,EAAO,UAAU,IAAI,SAAS,EAC9B,MAAMN,EAAS,MAAMP,EAAYiB,EAAcD,CAAW,EAC1D,GAAIT,EAAO,SAAW,EAAG,CACvBY,EAAS,KAAK,CACZ,MAAO,OACP,QAAS,0BACT,SAAU,UACpB,CAAS,EACD,MACD,CACDb,EAAaC,CAAM,EACnBO,EAAS,QAAO,EAChBE,GACD,MAAe,CACdG,EAAS,MAAM,CACb,MAAO,QACP,QAAS,kDACT,SAAU,UAClB,CAAO,CACP,QAAc,CACRN,EAAO,UAAU,OAAO,SAAS,CAClC,CACF,CAED,eAAeO,EAAmBC,EAAO,CACvCA,EAAM,eAAc,EACpB,MAAMC,EAAaX,EAAM,MAAM,KAAI,EACnC,GAAI,CAACW,EAAY,CACfH,EAAS,MAAM,CACb,MAAO,QACP,QAAS,6BACT,SAAU,UAClB,CAAO,EACD,MACD,CACDf,IACAa,EAAeK,EACfN,EAAc,EACdJ,EAAQ,MAAM,QAAU,OACxB,MAAMM,EAAc,EACpBN,EAAQ,MAAM,QAAU,MACzB,CAEDF,EAAK,iBAAiB,SAAUU,CAAkB,EAGjC,IAAI,qBACnB,MAAMG,GAAW,CACXA,EAAQ,CAAC,EAAE,gBACb,MAAML,EAAc,CAEvB,EACD,CAAE,UAAW,CAAG,CACpB,EAEW,QAAQL,CAAM,CACzB,CAAC"}